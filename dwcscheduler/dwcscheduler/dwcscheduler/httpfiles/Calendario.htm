<!DOCTYPE html>
<html>
<head>
    <meta charset='utf-8' />
    <link rel="shortcut icon" href="favicon.ico" type="image/x-icon">
    <link rel="icon" href="favicon.ico" type="image/x-icon">
    <meta name='viewport' content='width=device-width, initial-scale=1.0' />
    <title>DWC Agenda Online</title>
    <!--<script src='https://code.jquery.com/ui/1.12.1/jquery-ui.min.js'></script>-->

    <link href='fullcalendar.min.css' rel='stylesheet' />
    <link href='https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.10.2/fullcalendar.print.min.css' rel='stylesheet' media='print' />
    <script src='https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment.min.js'></script>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.10.2/locale/pt-br.js'></script>
    <script src='https://code.jquery.com/jquery-3.5.1.min.js'></script>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.10.2/fullcalendar.min.js'></script>
    <style>
        body {
            margin: 10px 10px;
            padding: 0;
            font-family: "Lucida Grande",Helvetica,Arial,Verdana,sans-serif;
            font-size: 14px;
            background-color: white;
        }
        #calendar {
            max-width: 900px;
            margin: 0 auto;
        }
        /* MODAL SEU NOME */
        .mainModalName {
            display: none;
            background-color: white;
            position: fixed;
            left: 15%;
            top: 1%;
            z-index: 1000;
            width: 70%;
            height: 50%;
            border-radius: 20px;
            box-shadow: 0.5em 0.5em 1em 0.5em rgba(0,0,0,0.5);
}
            .divSpan{
                width: 100%;
                /* background-color: yellow; */
            }
            .spanX{
                float: right;
                padding-right: 25px;
                margin-top: 10px;
                cursor: pointer;
                font-size: 15px;
            }
            .data-person{
                text-align: center;
                /* display: flex; */
                font-family: 'Arial';
            }
            .identify{
                font-size: 12px;
            }
            .iptName{
                height: 25px;
                width: 65%;
                border: 2px solid #02163f;
            }
            .btnSendName{
                height: 30px;
                width: 30%;
                background-color: #02163f;
                border: 0;
                color: white;
                font-weight: bold;
                border-radius: 25px;
            }
    </style>
    <script>
        var selectstart ;
        var selectend;
        var dataTime_start;
        var dataTime_end;
        var dataavailability;
        var dataschedules;
        var timeStart_schedules;
        var timeEnd_schedules;
        
        $(document).ready(function () {
            $.fullCalendar.locale('pt-br');
            var id = $.urlParam('id');
            fetch('/dwcscheduler/get-agenda?id=' + id, {
                method: 'GET',
                headers: {}
            }).then(function (response) {
                // Processa a resposta do servidor
                if (response.status == 200) {

                    response.text().then(function (text) {
                        var obj = JSON.parse(String(text));
                        //obj.push({
                        //    title: "Indisponível",
                        //    time_start: "2000-12-30T00:00",
                        //    time_end: "2000-12-30T23:00"
                        //});
                        //obj.push({
                        //        title: "Indisponível",
                        //        time_start: "2999-01-01T00:00",
                        //        time_end: "2999-01-01T01:00"
                        //    });
                        console.log("get-agenda result=" + JSON.stringify(obj))
                        var first_start = "2999-01-01T01:00";
                        var last_end = "2000-12-30T23:00";
                        dataavailability = JSON.parse(obj.dataavailability);
                        dataschedules = JSON.parse(obj.dataschedules);
                        // var dataTime_start;
                        // var dataTime_end;

                        if(dataavailability[0])    dataTime_start = dataavailability[0].time_start 
                        
                        if(dataavailability[0])    dataTime_end = dataavailability[0].time_end

                        if(dataschedules[0])       timeStart_schedules = dataschedules[0].time_start 
                        
                        if(dataschedules[0])       timeEnd_schedules = dataschedules[0].time_end
                        
                        console.log("Data Availability: " + JSON.stringify(dataavailability));
                        console.log("Data Start \n" + dataTime_start)
                        console.log("Data End \n" + dataTime_end)
                        
                        console.log("Data Schedules:" + JSON.stringify(dataschedules));
                        console.log("Time Start \n" + timeStart_schedules);
                        console.log("Time End \n" + timeEnd_schedules);
                        //     //Eventos já existentes
                        // for (var i = 0; i < dataschedules.length; i++) {
                        //         var eventData = {
                        //             title: "Indisponível",
                        //             start: dataschedules[i].time_start,
                        //             end: dataschedules[i].time_end,
                        //             editable: false,
                        //             backgroundColor: '#02163F',

                        //         };
                        //         $('#calendar').fullCalendar('renderEvent', eventData, true);
                        //         console.log("DataSchedules " + JSON.stringify(dataschedules))

                        // }
                        
                    
                        // dataschedules.forEach(function(data){
                        //     var start_schedule = moment(data.time_start).format('HH:mm:ss');
                        //     var end_schedule = moment(data.time_end).format('HH:mm:ss');

                        //     console.log("Horário de início:", start_schedule);
                        //     console.log("Horário de fim:", end_schedule);
                        // })
                        

                        UpdateAvailability(dataTime_start,dataTime_end,dataavailability);
                        MakeSubtitleDiv();
                    });
                } 
                // fim da resposta STATUS 200
                else {
                    response.text().then(function (text) {
                        window.alert("Algo saiu errado:\n" + text);
                    });
                }
  

            // evt listener para o button month
            // var monthButtons = document.querySelectorAll('.fc-month-button');
            // monthButtons.forEach(function(button) {
            //     button.addEventListener('click', function() {
            //         UpdateAvailability(dataTime_start,dataTime_end,dataavailability)
            //         console.log("Onclick Success, View: Month, Availability Updated")    
            //     });
            // });
            // //evt listener para o button week
            // var weekButton = document.querySelectorAll('.fc-agendaWeek-button');
            // weekButton.forEach(function(button){
            //     button.addEventListener('click',function(){
            //         UpdateAvailability(dataTime_start,dataTime_end,dataavailability)
            //         console.log("Onclick Success, View: Week, Availability Updated") 
            //     })
            // })
            // //evt listener para o button day
            // var dayButton = document.querySelectorAll('.fc-agendaDay-button');
            // dayButton.forEach(function(button){
            //     button.addEventListener('click',function(){
            //         UpdateAvailability(dataTime_start,dataTime_end,dataavailability)
            //         console.log("Onclick Success, View: Day, Availability Updated") 
            //     })
            // })

            // evt listener para o button prev,next

            /*
            var prevButton = document.querySelector('.fc-prev-button');
            var nextButton = document.querySelector('.fc-next-button');
            prevButton.addEventListener('click', function() {
                UpdateAvailability(dataTime_start, dataTime_end, dataavailability);
            });
            nextButton.addEventListener('click', function() {
                UpdateAvailability(dataTime_start, dataTime_end, dataavailability);
            });
            */
            
            }); // final .then (response)

           $('#calendar').fullCalendar({
                
                header: {
                    left: 'today',
                   center: 'title , month,agendaDay', //agendaWeek,
                    right: 'prev,next'
                },
                buttonText: {
                    today: 'Hoje',
                    month: 'Mês',
                    week: 'Semana',
                    day: 'Dia'
                },
                monthNames: [
                'Janeiro',
                'Fevereiro',
                'Março',
                'Abril',
                'Maio',
                'Junho',
                'Julho',
                'Agosto',
                'Setembro',
                'Outubro',
                'Novembro',
                'Dezembro'
  ],
                defaultView: 'month',
                slotDuration: '01:00:00',  // mexer dps 
                minTime: '00:00:00',
                maxTime: '24:00:00',
                selectable: true,

                selectHelper: true,
                select: function (start, end, jsEvent, view) {
                    selectstart = start
                    selectend = end
                    // If user cli  cks on a day in month view, switch to day view and let them select a time
                    if (view.name === 'month') {
                        console.log("View: Month");
                        //.dataset.date;
                        var clickedElement = jsEvent.target
                        console.log(" Elemento clicado " + clickedElement);
                        var clickedDate = start.format('YYYY-MM-DD');
                        console.log("Data do elemento clicado:", clickedDate);
                        var teste = false;
                        dataavailability.forEach(function(dates){
            
                                var datastart = moment(dates.time_start).format('YYYY-MM-DD');
                                var dataend = moment(dates.time_end).format('YYYY-MM-DD');

                                if (clickedDate >= datastart && clickedDate <= dataend ) {
                                        console.log("Elemento clicado está disponível");
                                        $('#calendar').fullCalendar('changeView', 'agendaDay');
                                        $('#calendar').fullCalendar('gotoDate', start);
                                        UpdateDayAvailability(dataTime_start,dataTime_end,dataavailability);
                                        //setTimeout(UpdateDayAvailability(dataTime_start,dataTime_end,dataavailability),500)
                                        teste = true;
                                   
                            } 
                        })
                        if(!teste) window.alert(" Horario indisponível \n Por favor, escolha outro horário.");

                        
                    }
                    else if (view.name === 'agendaWeek') {
                        console.log("View: " + "Week");

                        var clickedElement = jsEvent.target
                        console.log(" Elemento clicado " + clickedElement);
                        var clickedDate = start.format('YYYY-MM-DD');
                        console.log("Data do elemento clicado:", clickedDate);
                        var teste = false;
                        dataavailability.forEach(function(dates){
            
                            var datastart = moment(dates.time_start).format('YYYY-MM-DD');
                            var dataend = moment(dates.time_end).format('YYYY-MM-DD');

                            if (clickedDate >= datastart && clickedDate <= dataend ) {
                                    console.log("Elemento clicado está disponível");

                                    document.getElementById("MyModal").style.display = 'block';
                    
                                    document.getElementById("iptName").value = '';
                                    document.getElementById("iptEmail").value = '';
                                    $('#calendar').fullCalendar('unselect');
                                    
                                    // $('#calendar').fullCalendar('changeView', 'agendaDay');
                                    // $('#calendar').fullCalendar('gotoDate', start);
                                    teste = true;
                            } 
                        })
                        if(!teste) window.alert(" Horario indisponível \n Por favor, escolha outro horário.");
                        
                    } 
                    else {
                        var dayName = view.title
                        var clickedTime = start.format('HH:mm:ss');
                        console.log("Dia do elemento clicado:" + dayName)
                        console.log("Hora do elemento clicado:", clickedTime);
                        makeModal(dayName,clickedTime);
                        $('#calendar').fullCalendar('unselect');
                    }
                },
                editable: false,
                eventLimit: true,
                events: [],
                eventRender: function (event, element) {},

                viewRender: function(view, element) {
                    if (view.name === 'month') {
                        setTimeout(function() {
                            UpdateAvailability(dataTime_start, dataTime_end, dataavailability)
                        }, 100);
                        console.log('View: Modo mês');
                    } 
                    else if(view.name === 'agendaWeek') {
                        console.log("View Modo Semana")
                        // setTimeout(function() {
                        //     UpdateDayAvailability(dataTime_start, dataTime_end, dataavailability,dayName)
                        // }, 100);
                    }
                    else{
                        var dayName = view.title
                        console.log("View title result = " + dayName)
                        setTimeout(function() {
                           UpdateDayAvailability(dataTime_start, dataTime_end, dataavailability, dataschedules, dayName)
                        }, 100);
                    }
    },
            });
            // Enviar os dados 
            document.getElementById("btnSendName").addEventListener("click",function(){
                            var name = document.getElementById("iptName").value;
                            var email = document.getElementById("iptEmail").value;
                            console.log("Nome enviado: " + name + "\n" + "E-mail Enviado: " + email)
                            sendAgenda(id,name, email,selectstart,selectend); 
                           
        })
        
        });
        // Função para obter o valor de um parâmetro de URL
        $.urlParam = function (name) {
            var results = new RegExp('[\\?&]' + name + '=([^&#]*)').exec(window.location.href);
            if (!results) {
                return null;
            }
            return decodeURIComponent(results[1].replace(/\+/g, ' '));
        }
        
        
        function makeModal(day,time){
                // console.log("START " + start + "\n" + "END " + end)
                document.getElementById("MyModal").style.display = 'block';
                document.getElementById("iptName").value = '';
                document.getElementById("iptEmail").value = '';
                document.getElementById("DateToday").innerHTML = day + " " + time
        }
        
        function MakeSubtitleDiv(){
                            var subtitleDiv = document.createElement('div');
                            subtitleDiv.className = 'calendar-subtitle';

                            subtitleDiv.innerHTML = `
                            <div class="subtitle-divs" style = "width: 32%; justify-content: left">
                                <span style="width: 12px; height: 12px; background: #9DDBBD;"></span>
                                <span>Disponível</span>
                            </div>
                            <div class="subtitle-divs" style = "width: 32%; justify-content: center">
                                <span style="width: 12px; height: 12px; background: #f89598;"></span>
                                <span>Indisponível</span>
                            </div>
                            <div class="subtitle-divs" style = "width: 32%; justify-content: right">
                                <span style="width: 12px; height: 12px; background: #FFEE92;"></span>
                                <span>Poucos Horários</span>
                            </div>
                            `;

                        $('#calendar').append(subtitleDiv);
                        }
                  
        function hideEventContainer() {
            var container = document.querySelectorAll('.fc-event-container, .fc-more-cell');
                container.forEach(function(td) {
                    td.classList.add("hide-container");
                });
            console.log("HideEventContainer Result Success");
        }
        
        function UpdateAvailability(datastart,dataend,availability){                    
            var tds = document.querySelectorAll('.fc-day','.fc-highlight');
            if (availability.length === 0) {
                tds.forEach(function(td) {
                    td.classList.add('unavailable');  
                });
            } 
            else {
                availability.forEach(function(dates){
                    var datastart = moment(dates.time_start).format('YYYY-MM-DD');
                    var dataend = moment(dates.time_end).format('YYYY-MM-DD');
                    tds.forEach(function(td) {
                        var dataDate = moment(td.getAttribute('data-date')).format('YYYY-MM-DD');
                        if (dataDate >= datastart && dataDate <= dataend) {
                            td.classList.add('available');
                        } else {
                            td.classList.add('unavailable');                 
                        }
                    });
                })
            }
            console.log("UpdateAvailability Result Success");
            hideEventContainer()                                
        }
                            
        function UpdateDayAvailability(datastart,dataend,availability, schedules,dateString){
            // var tds = document.querySelectorAll('.fc-widget-content');
            var trs = document.querySelectorAll('.fc-slats tr');
            if (availability.length === 0) {
                trs.forEach(function(tr) {
                    console.log("Availability: 0");
                    tr.classList.remove('available');
                    tr.classList.add('unavailable');  
                });
            } 
            else {
                /////////////////////////////////////// FORMATAR A DATA
                //dateString = "25 de Maio de 2023";
                var dateParts = dateString.split(" de "); // Divide a string em partes separadas por " de "
                // Obtém os valores do dia, mês e ano
                var day = parseInt(dateParts[0]);
                var month = getMonthIndex(dateParts[1]);
                var year = parseInt(dateParts[2]);

                // Função auxiliar para obter o índice do mês com base no nome do mês
                function getMonthIndex(monthName) {
                    var months = [
                    'Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho',
                    'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'
                    ];
                    return months.indexOf(monthName);
                }

                // // Cria o objeto de data
                // var date = new Date(year, month, day);

                // console.log(date);

                // //////////////////////////////////////////////// FORMATAR A O HORARIO 
                // // Supondo que você já tenha o horário em uma variável chamada time no formato 'HH:mm:ss'
                // var time = "12:30:00"; // Exemplo de horário

                // // Cria um objeto moment para a data
                // var momentDate = moment(dateStr, 'YYYY-MM-DD');

                // // Separa as partes do horário
                // var timeParts = time.split(":");
                // var hours = parseInt(timeParts[0]);
                // var minutes = parseInt(timeParts[1]);
                // var seconds = parseInt(timeParts[2]);

                // // Define as horas, minutos e segundos no objeto momentDate
                // momentDate.hours(hours);
                // momentDate.minutes(minutes);
                // momentDate.seconds(seconds);

                // // Obtém a data final no formato desejado (YYYY-MM-DD HH:mm:ss)
                // var dateTime = momentDate.format('YYYY-MM-DD HH:mm:ss');

                // console.log(dateTime);
                // ////////////////////////////////////////////////////////////// RESTO DA FUNÇÃO


                console.log("UpdateDayAvailability")

                availability.forEach(function(dates) {
                    var datastart = moment(dates.time_start);
                    var dataend = moment(dates.time_end);
                    //var datastart = moment(dates.time_start).startOf('hour').format('HH:mm:ss');
                    //var dataend = moment(dates.time_end).startOf('hour').format('HH:mm:ss');

                    console.log(datastart + "\n" + dataend);

                    trs.forEach(function(tr) {
                        
                        var dataTime = moment(tr.getAttribute('data-time'), 'HH:mm:ss');


                        console.log(dataTime);

                        //var hourParts = dataTime.split(":"); // Divide a string em partes separadas por " de "

                        // Obtém os valores do dia, mês e ano
                        var hour = parseInt(moment(dataTime).format('HH'));
                        var minute = parseInt(moment(dataTime).format('mm'));
                        var second = parseInt(moment(dataTime).format('ss'));

                        // Cria o objeto de data
                        var dateView = moment(new Date(year, month, day, hour, minute, second ));

                        console.log(dateView);

                        if (dateView.isSameOrAfter(datastart) && dateView.isSameOrBefore(dataend)) {
                            tr.classList.remove('unavailable');
                            tr.classList.add('available');
                        }
                        else {
                             tr.classList.remove('available');
                             tr.classList.add('unavailable');
                        }
                    });
                });
                schedules.forEach(function (dates) {
                    var datastart = moment(dates.time_start, moment.ISO_8601).format('YYYY-MM-DDTHH:mm:ss');
                    var dataend = moment(dates.time_end, moment.ISO_8601).format('YYYY-MM-DDTHH:mm:ss');
                    //var datastart = moment(dates.time_start).startOf('hour').format('HH:mm:ss');
                    //var dataend = moment(dates.time_end).startOf('hour').format('HH:mm:ss');

                    console.log(datastart + "\n" + dataend);

                    trs.forEach(function (tr) {

                        var dataTime = moment(tr.getAttribute('data-time'), 'HH:mm:ss');


                        console.log(dataTime);

                        //var hourParts = dataTime.split(":"); // Divide a string em partes separadas por " de "

                        // Obtém os valores do dia, mês e ano
                        var hour = parseInt(moment(dataTime).format('HH'));
                        var minute = parseInt(moment(dataTime).format('mm'));
                        var second = parseInt(moment(dataTime).format('ss'));

                        // Cria o objeto de data
                        var dateView = moment(new Date(year, month, day, hour, minute, second), moment.ISO_8601).format('YYYY-MM-DDTHH:mm:ss');;

                        console.log(dateView);

                        if (dateView >= datastart && dateView <= dataend) {
                            tr.classList.remove('available');
                            tr.classList.add('unavailable');
                        }
                    });
                });
                
            
            /*
                availability.forEach(function(dates){
                    var datastart = moment(dates.time_start).format('HH:mm:ss');
                    var dataend = moment(dates.time_end).format('HH:mm:ss');
                    tds.forEach(function(td) {
                        var tr = td.parentNode.parentNode;
                        var dataTime = moment(tr.getAttribute('data-time')).format('HH:mm:ss');
                            if (dataTime >= datastart && dataTime <= dataend) {
                                td.classList.add('available');
                            } else {
                                td.classList.add('unavailable');
                            // td.setAttribute("id","unavailable")
                            }
                    });
                })
                */            
            }
        }

        function sendAgenda(id,name, email,start,end){
            document.getElementById("MyModal").style.display = 'none';
            console.log("EVENT DATA RECEBIDO:" + "\n" + "ID " + id + "\n" + "title(name) " + name + "\n" + "start " + start + "\n" + 
            "end " + end + "\n" + "email " + email)
                            if (name && email) {
                                
                                var eventData;
                                eventData = {
                                    sip: id,
                                    title: name,
                                    start: start,
                                    end: end,
                                    email: email
                                };
                                fetch('/dwcscheduler/salvar-evento', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json'
                                    },
                                    body: JSON.stringify(eventData)
                                }).then(function (response) {
                                    // Processa a resposta do servidor
                                    if (response.status == 200) {

                                        response.text().then(function (text) {
                                            var obj = JSON.parse(String(text));
                                            switch (obj.status) {
                                                case 200:
                                                    window.alert("\n" + obj.msg);
                                                    $('#calendar').fullCalendar('renderEvent', eventData, true);
                                                    break;
                                                default:
                                                    window.alert(obj.msg);
                                                    break;
                                            }
                                        });
                                    } else {
                                        response.text().then(function (text) {
                                            window.alert("Algo saiu errado:\n" + text);
                                        });
                                    }

                                });

                                //var mailto = "mailto:" + email + "?subject=" + encodeURIComponent("Agendamento de evento") + "&body=" + encodeURIComponent("Ol�,\n\nSeu evento foi agendado para " + moment(start).format("DD/MM/YYYY [�s] HH:mm") + " e ter� dura��o de " + duration + " minutos.\n\nAtenciosamente,\nAgenda Online");
                                //window.open(mailto);
                            }
        }

        function closeModal(event){
            if(event.target.id === "spanX"){
                // limpar as divs
                document.getElementById("iptName").innerHTML = '';
                document.getElementById("iptEmail").innerHTML = '';
                console.log("DIVS LIMPAS")
                // sumir o modal 
                document.getElementById("MyModal").style.display = 'none';
                // setTimeout(function() {
                //     location.reload();
                // }, 200);
                
            }
    }
        document.addEventListener('click', closeModal);
    </script>
</head>
<body>
    <!--Calendário-->
    <div id='calendar'></div>

         <!--MODAL DIGITE SEU NOME-->
         <div class="mainModalName" id="MyModal">
            <div class="divSpan">
            <span class="spanX" id="spanX">✕</span>
        </div>
            <br>
            </br>
            <div class="data-person">
                <h3 id="DateToday"></h3>
                <h2 style="    margin-block-end: 0;">Digite seu nome e e-mail</h2>
                <p class="identify">Se identifique para continuar o agendamento</p>
                <p></p>
                <p>Nome:</p>
                <input type="text" class="iptName" placeholder="Seu nome" id="iptName">
                <br>
                <p>E-mail:</p>
                <input type="text" class="iptName" placeholder="Seu E-mail" id="iptEmail">
                </br>
                <br>
               </br>
                <button class="btnSendName" id="btnSendName" >Enviar</button>
            </div>
        </div>

</body>
</html>