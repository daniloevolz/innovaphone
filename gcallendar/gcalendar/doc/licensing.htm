<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>Licensing</title>
    <link rel="stylesheet" href="../web1/doc/innovaphone.doc.css" type="text/css" />
    <link rel="stylesheet" href="../web1/doc/vs.css">
    <script src="../web1/doc/highlight.pack.js"></script>
    <script>hljs.initHighlightingOnLoad();</script>
</head>

<body>
    <h1>Licensing</h1>
    <p>
        If you like to charge customers for your app, you need to implement some kind of software licensing mechanism and sell the licenses.
        This article describes the different options that you have.
    </p>
    <p>
        If you distribute your app on the <a href="howto/AppStore.htm">innovaphone App Store</a>, you need to specify which option your app uses.
    </p>

    <h2>Content</h2>
    <dl>
        <dt><a href="#license-innovaphone">innovaphone licensing model</a></dt>
        <dd>
            Paid apps that use the same per-user licenses as the innovaphone apps. The licenses are sold by innovaphone.
        </dd>
        <dt><a href="#license-own">Your own licensing model</a></dt>
        <dd>
            Paid apps using your own licenses.
        </dd>
        <dt><a href="#license-free">Free apps</a></dt>
        <dd>
            Free apps that do not require a license.
        </dd>
    </dl>

    <a name="license-innovaphone"></a><h2>innovaphone licensing model</h2>
    <h3>Overview</h3>
    <p>
        <ul>
            <li>The licenses are created by innovaphone on your behalf. We add the license to our official price list and market it over our established sales channel. We pay you the revenue reduced by the margin of innovaphone and the sales channel.</li>
            <li>Customers can buy or rent the licenses.</li>
            <li>Available license types are per-user or per-service/instance of the app.</li>
            <li>The PBX does the license check and provides the information to your app as part of the user login.</li>
        </ul>
    </p>

    <h3>License types App and Service</h3>
    <p>
        In most cases a license of type App can be used to implement a per user licensing scheme - an App License for specific App can be enabled on a PBX user and a check in the App Service and in the App running in the myApps cleint can be performed.
    </p>
    <p>
        The license of a type Service can be used to assign some specific number of licenses to an App Service via <a href="http://wiki.innovaphone.com/index.php?title=Reference13r1:Concept_Apps#App_Objects_Parameters">the parameter Licenses on the App Object</a>. A check of the amout of licenses granted can be performed in the App Service.
    </p>

    <h3>Naming scheme</h3>
    <p>
        A license refers to a single app. If your app service provides multiple apps, they are licensed individually.
    </p>
    <p>
        The license name contains the name of the HTML file of the app without the extension. So your HTML file name must be unique and follow the scheme <code>manufacturer-appname.htm</code>.
    </p>
    <p>
        <h4>Example: Switchbard by innovaphone</h4>
        <div>HTML file: <code>innovaphone-switchboard.htm</code></div>
        <div>License name: <code>App(innovaphone-switchboard)</code></div>

        <h4>Example: Calculator by ACME</h4>
        <div>HTML file: <code>acme-calculator.htm</code></div>
        <div>License name: <code>App(acme-calculator)</code></div>

        <h4>Example: Conference by ACME</h4>
        <div>HTML file: <code>acme-monitoring.htm</code></div>
        <div>License name: <code>Service(acme-monitoring)</code></div>
    </p>
    <p>
        Example XML file with licenses:
        <pre><code lang="xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
    &lt;licenses&gt;
    &lt;license amount='10' type='PBX-App(innovaphone-switchboard)13' mac='00-90-33-01-02-ab' var='PBX0'&gt;038df...&lt;/license&gt;
    &lt;license amount='10' type='PBX-App(acme-calculator)13' mac='00-90-33-01-02-ab' var='PBX0'&gt;038df...&lt;/license&gt;
    &lt;license amount='10' type='PBX-Service(acme-monitoring)13' mac='00-90-33-01-02-ab' var='PBX0' &gt;8d0ea1...&lt;/license&gt;
    &lt;license amount='20' type='PBX-Port13' mac='00-90-33-01-02-ab' var='PBX0'&gt;8d0ea...&lt;/license&gt;
&lt;/licenses&gt;
</code></pre>
    </p>
    <p>
        <h4>Head Matching for License Names</h4>
        <p>
            The verification of a license for an app is based on a head-match of the string of the license against the app name string. For example a license <code>example-app</code> would be valid for the app <code>example-app</code> and <code>example-app-light</code>. This must be considered while defining the strings of the app names.
        </p>
    </p>

    <h3>Checking the license</h3>
    <p>
        The actual license check for the license type App is done by the PBX when a user requests a login for your app. The following conditions must be met that the PBX marks the login as licensed:
        <ul>
            <li>The license must be assigned to the user. This can be done at the user object or at templates.</li>
            <li>The number of users that have the license assigned, must not exceed the number of installed licenses on the PBX.</li>
        </ul>
    </p>
    <p>
        The information if the user got a license is then transmitted to the app as part of the login.
        This is done using the unlicensed property in the <a href="appwebsocket/AppWebsocket.htm#info">info</a> object of the <a href="appwebsocket/AppWebsocket.htm#AppLogin">AppLogin</a> message.
        The structure is protected by the login digest.
    </p>
    <p>
        In the client JavaScript code of your app, you can check the App license after an AppWebsocket connection is established by accessing the property <em>unlicensed</em> (no check for Service license available here):
<pre><code lang="javascript">var app = new innovaphone.appwebsocket.Connection(start.url, start.name);
app.onconnected = app_connected;

function app_connected(domain, user, dn, appdomain) {
    if (app.logindata.info.unlicensed) {
        // unlicensed mode
    }
    else {
        // licensed mode
    }
}
</code></pre>
    </p>
    <p>
        In the C++ code of an app service, you can do the same check on incoming AppWebsocket connections. Note that you might need to distinguish between the connections from different apps.
        <pre><code lang="cpp">bool NewApp1Session::AppWebsocketConnectComplete(class json_io & msg, word info)
{
    bool unlicensed = msg.get_bool(info, "unlicensed");

    if (app && !strcmp(app, "manufacturer-newapp1")) {
        if (unlicensed) {
            // unlicensed mode
        }
        else {
            // licensed mode
        }
    }
    else if (app && !strcmp(app, "manufacturer-newapp1admin") {
        // no license needed
    }
    
    // amount of Service licenses 
    int licenses = msg.get_int(info, "lics");
    
    return true;
}</code></pre>
    </p>
    <p>
        In the JavaScript code of an app service you can check the JsonApiConnection.unlicensed attribute of the AppWebsocket connection from the myApps client to the app service. Note that you might need to distinguish between the connections from different apps.
        <pre><code lang="cpp">new JsonApi("test").onconnected(function(conn) {
    if (conn.app === "manufacturer-newapp1") {
        if (conn.unlicensed) {
            // unlicensed mode
        }
        else {
            // licensed mode
        }
    }
    else if (conn.app === "manufacturer-newapp1admin") {
        // no license needed
    }

    // amount of Service licenses
    var licenses = conn.lics;
});</code></pre>
    </p>

    <p>
        It is also possible to check if a specific user object has a valid specific app license assigned. This check require access to the PbxAdminApi in order to use message <a href="/appwebsocket/PbxAdminApi.htm#CheckAppLic">CheckAppLic</a> for this purpose. This must be done on the AppWebsocket connection from the PBX to the app service, therefore PbxApi library of the JavaScript environment is used.
        <pre><code lang="cpp">new PbxApi("PbxAdminApi").onconnected(function (conn) {
    conn.send(JSON.stringify({ api: "PbxAdminApi", mt: "CheckAppLic", cn: "Atlantis", lic: "App(manufacturer-newapp1)" }));

    conn.onmessage(function (msg) {
        var obj = JSON.parse(msg);

        if (obj.mt === "CheckAppLicResult") {
            if (obj.ok === true) {
                // licensed mode
            } else {
                // unlicensed mode
            }
        }
    }

});</code></pre>
    </p>


    <h3>Unlicensed mode</h3>
    <p>
        It's up to you, what your app does without a license. Some ideas:
        <ul>
            <li>Disable all functionality if there is no license.</li>
            <li>Activate a demo mode if there is no license.</li>
            <li>The app works without a license. But the license unlocks some premium functionality.</li>
        </ul>
    </p>

    <a name="other"></a><h2>Other license checks</h2>
    <p>
        Depending on license requirements other license information available form the PBX can be used, like overall number of Port Licenses. The messages <a href="/appwebsocket/PbxAdminApi.htm#GetPbxLicenses">GetPbxLicenses</a> and <a href="/appwebsocket/PbxAdminApi.htm#GetAppLics">GetAppLics</a> are a good starting point to implement a custom license requirement.
    </p>

    <a name="example_app"></a><h2>Example App</h2>
    <p>
        A Visual Studio project <a href="https://github.com/innovaphone/jslicenseexample">jslicenseexample</a> for an example App implementing various license check mechanisms can be used as a reference.
    </p>
    <a name="testing"></a><h2>Test Mode for Licenses</h2>
    <p>
        An innovaphone gateway or an IPVA running the PBX can be put into a so called <a href="http://wiki.innovaphone.com/index.php?title=Reference12r1:General/License">Test-Mode</a> which can be used to figure out which licenses are required for the proper functionality of the PBX and Apps. In this mode all license checks for Apps are positive, even if no licenses for particular App or Service are installed.
    </p>
    <p>
        It is possible to detect if a PBX connecting to the App Service is running in the Test-Mode. The property <code>testmode</code> of the <code>info</code> object in the <code>AppLogin</code> message is set to true in this case.
        <pre><code lang="cpp">new JsonApi("test").onconnected(function(conn) {
    var info = JSON.parse(conn.info);
    if ("testmode" in info) log("Test-Mode: " + info.testmode);
});</code></pre>
    </p>
    <a name="dummy-lic"></a><h2>Dummy Licenses</h2>
    <p>
        A dummy licenses issued for the App(example-app) and the Service(example-service) are valid on any innovaphone gateway or an IPVA running the PBX. The dummy licenses are not bound to any MAC address and can be used to test license checking implementation for the App in case Test-Mode is not suitable for your scenario.
    </p>
    <p>
        An innovaphone gateway or IPVA equipped with a dummy license will start a 99 hours test mode that can be prolonged any time. This test mode is not visible for the application and the behaviour of the license is the same as for real licenses.
    </p>
    <p>
        The dummy license file is available for download <a href="dummy_lics.xml" target="_blank" download="dummy_lics.xml">here</a>.
    </p>
    <a name="license-own"></a><h2>Your own licensing model</h2>
    <p>
        If you don't want to use the innovaphone licensing model, you can use your own one.
        In that case you need to sell and check the licenses yourself.
    </p>
    <p>
        Note: Your app must ignore the unlicensed attribute in the <a href="appwebsocket/AppWebsocket.htm#info">info</a> object of the <a href="appwebsocket/AppWebsocket.htm#AppLogin">AppLogin</a> message.
        It will always be true, as the PBX does not find an innovaphone app license for the user.
    </p>

    <a name="license-free"></a><h2>Free apps</h2>
    <p>
        If your app is for free, you don't need to do something special.
    </p>
    <p>
        Note: Your app must ignore the unlicensed attribute in the <a href="appwebsocket/AppWebsocket.htm#info">info</a> object of the <a href="appwebsocket/AppWebsocket.htm#AppLogin">AppLogin</a> message.
        It will always be true, as the PBX does not find an innovaphone app license for the user.
    </p>
</body>
</html>