<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>innovaphone SDK - Dns</title>
    <link rel="stylesheet" href="../../web1/doc/innovaphone.doc.css" type="text/css" />
    <link rel="stylesheet" href="../../web1/doc/vs.css">
    <script src="../../web1/doc/highlight.pack.js"></script>
    <script>hljs.initHighlightingOnLoad();</script>
</head>

<body>
    <h1>Dns</h1>
    <p>
        This document describes the Dns client available in the JavaScript environment for app serivices.
    </p>

    <h2>Table of content</h2>
    <table>
        <tr>
            <td><b>Object</b></td>
            <td><b><a href="#Dns">Dns</a></b><br /></td>
        </tr>
        <tr>
            <td><b>Functions</b></td>
            <td>
                <a href="#getHostByName">getHostByName</a><br />
                <br />
            </td>
        </tr>
        <tr>
            <td><b>Object</b></td>
            <td>
                <b><a href="#DnsRequest">DnsRequest</a></b><br />
            </td>
        </tr>
        <tr>
            <td><b>Functions</b></td>
            <td>
                <a href="#onresult">onresult</a><br />
                <br />
            </td>
        </tr>
        <tr>
            <td><b>Object</b></td>
            <td>
                <b><a href="#DnsResult">DnsResult</a></b><br />
            </td>
        </tr>
        <tr>
            <td><b>Members</b></td>
            <td>
                <a href="#addr">addr</a><br />
                <a href="#isIPv6">isIPv6</a><br />
                <br />
            </td>
        </tr>
        <tr>
            <td><b>Examples</b></td>
            <td>
                <a href="#Example-Single">Getting an IP address for a host name</a><br />
                <a href="#Example-Multiple">Getting all IP addresses for a host name</a><br />
            </td>
        </tr>
    </table>

    <h2><a name="Dns">Dns</a></h2>

    <a name="getHostByName"><div class="fnhead" style="margin-top:5px">getHostByName</div></a>
    <dd>
        Starts a DNS resolution of a given host name.
        <h4>Parameters</h4>
        <table style="margin-left:-12px">
            <tr><td class="param">string <b>hostName</b></td><td>The hostname to be resolved.</td></tr>
            <tr><td class="param">bool <b>all</b></td><td>Optional. If true, the result will be an array of all resolved addresses.</td></tr>
            <tr><td class="param">int <b>timeout</b></td><td>Optional. The timeout for the request in milliseconds. If no timeout is specified, the default timeout of 5000ms will be used.</td></tr>
        </table>
        <h4>Return value</h4>
        <table style="margin-left:-12px">
            <tr><td class="param"><a href="#DnsRequest">DnsRequest</a></td><td>An object representing the request.</td></tr>
        </table>
    </dd>
    <dd>
        <pre><code class="JS">Dns.getHostByName("www.example.com")
    .onresult(function(hostName, result) {
        log(hostName + ": " + (result ? result.addr : "not found"));
     });</code></pre>
    </dd>

    <h2><a name="DnsRequest">DnsRequest</a></h2>

    <a name="onresult"><div class="fnhead" style="margin-top:5px">onresult</div></a>
    <dd>
        Sets a callback function for processing the response from the DNS server. The callback must be set synchronously after calling <a href="#getHostByName">Dns.getHostByName</a>.
        Note that depending on the parameter all, the result will be
        <ul>
            <li>a single <a href="#DnsResult">DnsResult</a> or undefined</li>
            <li>an array containing 0..n <a href="#DnsResult">DnsResult</a> objects</li>
        </ul>
        <h4>Parameters, if all is set to false</h4>
        <table style="margin-left:-12px">
            <tr><td class="param">function <b>callback</b>(string hostName, <a href="#DnsResult">DnsResult</a> result)</td><td>A callback that will be called the DNS request is complete.</td></tr>
        </table>
        <h4>Parameters, if all is set to true</h4>
        <table style="margin-left:-12px">
            <tr><td class="param">function <b>callback</b>(string hostName, [<a href="#DnsResult">DnsResult</a>])</td><td>A callback that will be called the DNS request is complete.</td></tr>
        </table>
        <h4>Return value</h4>
        <table style="margin-left:-12px">
            <tr><td class="param"><a href="#DnsRequest">DnsRequest</a></td><td>A reference to the object itself. Useful for method chaining.</td></tr>
        </table>
    </dd>
    <dd>
        <pre><code class="JS">Dns.getHostByName("www.example.com")
    .onresult(function(hostName, result) {
        log(hostName + ": " + (result ? result.addr : "not found"));
     });</code></pre>
    </dd>
    <h2><a name="DnsResult">DnsResult</a></h2>

    <a name="addr"><div class="fnhead" style="margin-top:5px">addr</div></a>
    <dd>
        A string containing the resolved address.
    </dd>
    <a name="isIPv6"><div class="fnhead" style="margin-top:5px">isIPv6</div></a>
    <dd>
        True, if <a href="#addr">addr</a> represents an IPv6 address. Otherwise <a href="#addr">addr</a> represents an IPv4 address.
    </dd>


    <h2>Examples</h2>

    <h3><a name="Example-Single">Getting an IP address for a host name</a></h3>
    In this example we do a DNS resolution of a host name and print the resolved address to the log.

    <pre><code class="JS">Dns.getHostByName("www.example.com").onresult(function(hostName, result) {
    log("DNS resolution for " + hostName + ":");
    if (result) {
        log((result.isIPv6 ? "    IPv6: " : "    IPv4: ") + result.addr);
    }
    else {
        log("    host not found");
    }
});</code></pre>

    <h3><a name="Example-Multiple">Getting all IP addresses for a host name</a></h3>
    In this example we do a DNS resolution of a host name and print all resolved addresses to the log.

    <pre><code class="JS">Dns.getHostByName("www.example.com", true).onresult(function(hostName, result) {
    log("DNS resolution for " + hostName + ":");
    if (result.length) {
        result.forEach(function(r) {
            log((r.isIPv6 ? "    IPv6: " : "    IPv4: ") + r.addr);
        });
    }
    else {
        log("    host not found");
    }
});</code></pre>
</body>
</html>
