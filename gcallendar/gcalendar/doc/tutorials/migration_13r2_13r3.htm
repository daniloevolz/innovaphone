<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>SDK migration from 13r2 to 13r3</title>
    <link rel="stylesheet" href="../../web1/doc/innovaphone.doc.css" type="text/css" />
    <link rel="stylesheet" href="../../web1/doc/vs.css">
    <script src="../../web1/doc/highlight.pack.js"></script>
    <script>hljs.initHighlightingOnLoad();</script>
</head>

<body>
    <h1>SDK migration from 13r2 to 13r3</h1>
    <p>
        This article describes changes in the SDK and APIs between the major software releases 13r2 and 13r3.
    </p>

    <h2>Content</h2>
    <dl>
        <dt><a href="#compatibility">Compatibility Statement</a></dt>
        <dd>
            General statement to compatibility of the Apps in 13r2 and 13r3 environments.
        </dd>
                <dt><a href="#project-upgrade">Visual Studio Project Upgrade</a></dt>
        <dd>
            Visual Studio Project upgrade from 13r2 to 13r3 SDK.
        </dd>
        <dt><a href="#license-upgrade">License Upgrade</a></dt>
        <dd>
            App License upgrade policy.
        </dd>
        <dt><a href="#api-changes">API changes</a></dt>
        <dd>
            Changes in the APIs of the SDK Libraries, PBX and Apps. 
        </dd>
    </dl>

    <a name="compatibility"></a><h2>Compatibility Statement</h2>
    <p>
        The Apps compiled with 13r2 SDK are compatible to 13r3 App Platform Manager, however the Apps compiled with 13r3 SDK should be only executed on 13r3 App Platform Manager.
    </p>        
    <p>
        The 13r2 Apps intended to communicate with 13r2 PBX are also compatible to 13r3 PBX APIs in most cases. The possible incompatibilities are listed in the chapter "API changes" below.
    </p>


    <a name="project-upgrade"></a><h2>Visual Studio Project Upgrade</h2>
    <p>Prior upgrading the VisualStudio project to a new SDK version the local SDK version must be updated using the "innovaphone SDK Setup". The "innovaphone SDK Setup" is available for download on the <a href="https://store.innovaphone.com/release/download.htm">App Store</a> under "Software" tab.</p>
    <p>The current version of the SDK used in the Visual Studio Project is stored in the file <code>common/sdk.version</code>.</p>
    <p>The innovaphone Visual Studio plugin will detect an older version of the SDK in the project and will ask for upgrade. the manual update via "Tools" -> "innovaphone SDK" -> "Install/Update SDK" is available too.</p>


    <a name="license-upgrade"></a><h2>License Upgrade</h2>
    <p>
        The App licenses issued for major version 13 are valid for minor releases 13r2 and 13r3.
    </p>


    <a name="api-changes"></a><h2>API changes</h2>
    <h3>PBX API PbxAdminApi</h3>
    <p>
        The <a href="../appwebsocket/PbxAdminApi.htm"> PbxAdminApi</a> underwent a major rework in 13r3 with significant changes, that were not ported to the 13r2 PBX firmware. In most cases the changes are not breaking the compatibility and only extend available number of properties of the PBX objects that can be accessed.
    </p>
    <p>
        The <a href="">GetObjectResult</a> message was changed to deliver JSON data for extended PBX object properties instead of XML data. In the 13r2 firmware some extended Object properties are delivered as XML - this was changed in 13r3 in order to deliver consistent JSON data. This change is compatibility breaking and must be considered by the Apps developers using this API in the 13r2 apps.
    </p>

    <h3>PBX API Replication</h3>
    <p>
        The <a href="../appwebsocket/Replication.htm">PBX Replication API</a> and the <a href="../../sdk/common/interface/replication.htm">Replication Library</a> are extended in v13r3 by an update sequence number (USN) mechanism, to prevent a full synchronisation at the start of the replication. This change was not ported to the 13r2 PBX firmware and is also not available in the 13r2 SDK C++ library. However a fallback to full replication at the start is still available, so v13r3 Apps could replicate from the v13r2 PBX using full replication at startup.
    </p>

    <h3>PBX API Access Restriction for App Users</h3>
    <p>
        Prior this change a PBX User, given access to an App, when connected to the PBX via this App Object, had the same APIs access rights as the App Object itself. The adjustment ensures only PbxApi, PbxSignal, EpSignal, Messages and RCC APIs are available on direct AppWebsocket connection from the Users App to the PBX. Also the scope of the actions available on this connection is reduced to the resources of the logged in User (e.g. on RCC API the user is only capable to control own devices).
    </p>
    <p>
        The restriction was not ported to 13r2 PBX firmware so the behaviour will change with an upgrade of the PBX to 13r3. The Apps that are using following APIs from the App Client must be updated to move the functionality from the App Client to the App Service in order to adapt to this change:
        <ul>
            <li>RCC (if controlling devices other than of the logged in User)</li>
            <li>PbxAdmin</li>
            <li>TableUsers</li>
            <li>Services</li>
            <li>Impersonation</li>
        </ul>
    </p>
</body>
</html>